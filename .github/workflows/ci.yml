# .github/workflows/ci.yml

name: UniCampus Backend CI/CD

on:
  push:
    branches:
      - main        # Analyze and build/push on pushes to main
      - 'feat/**'   # Analyze feature branches
      - 'fix/**'    # Analyze fix branches
      - 'chore/**'  # Analyze chore branches
      - 'devops/**' # Analyze devops branches
  pull_request:
    types: [opened, synchronize, reopened] # Analyze PRs targeting main
    branches:
      - main

jobs:
  build-lint-test-analyze-flask: # Renamed job for clarity
    name: Flask - Build, Lint, Test & Analyze
    runs-on: ubuntu-latest
    defaults: # Set default working directory for steps in this job
      run:
        working-directory: ./flask_service 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        # working-directory is already ./flask_service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt 
          pip install flake8 pytest pytest-cov pytest-flask

      - name: Lint with Flake8
        # working-directory is ./flask_service
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Run Pytests for Flask service
        # working-directory is ./flask_service
        run: |
          # Pytest will look for tests/ directory within ./flask_service
          pytest --cov=app --cov-report=xml:coverage.xml --cov-report=term-missing
          # Removed || true as tests should now pass

      - name: SonarCloud Scan for Flask service
        uses: SonarSource/sonarcloud-github-action@master 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ./flask_service # Crucial: SonarCloud scans from this directory
          args: >
            -Dsonar.organization=iamsjeevan 
            -Dsonar.projectKey=iamsjeevan_unicampus-backend # This project key might need to be unique for Flask if you make Node a separate Sonar project
                                                            # Or use Sonar 'modules' for a monorepo if your Sonar edition supports it.
                                                            # For now, let's assume one SonarCloud project for the whole repo.
            -Dsonar.python.coverage.reportPaths=coverage.xml 
            # -Dsonar.sources=app # Relative to projectBaseDir (so it means flask_service/app)
            # -Dsonar.tests=tests # Relative to projectBaseDir (so it means flask_service/tests)

  build-and-push-flask-image: # Renamed job
    name: Flask - Build and Push Multi-Arch Docker Image
    runs-on: ubuntu-latest
    needs: build-lint-test-analyze-flask
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Flask Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./flask_service # Build context is the flask_service directory
          file: ./flask_service/Dockerfile # Explicitly point to the Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/unicampus-flask-service:latest 
            ghcr.io/${{ github.repository_owner }}/unicampus-flask-service:${{ github.sha }}
            # Changed image name to unicampus-flask-service
          cache-from: type=gha
          cache-to: type=gha,mode=max