# .github/workflows/ci.yml

name: UniCampus Backend CI/CD

on:
  push:
    branches:
      - main        # Analyze and build/push on pushes to main
      - 'feat/**'   # Analyze feature branches
      - 'fix/**'    # Analyze fix branches
      - 'chore/**'  # Analyze chore branches
      - 'devops/**' # Analyze devops branches
  pull_request:
    types: [opened, synchronize, reopened] # Analyze PRs targeting main
    branches:
      - main

jobs:
  build-lint-test-analyze:
    name: Build, Lint, Test & Analyze with SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # SonarCloud needs full history for accurate blame/new code detection

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Or your project's Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Ensure tools for linting and testing are installed
          pip install flake8 pytest pytest-cov 

      - name: Lint with Flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings for the next check. Adjust as needed.
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Run Tests with Pytest (and generate coverage)
        run: |
          # This command will pass even if no tests are found initially due to '|| true'.
          # Create a 'tests' directory and add actual test files (e.g., tests/test_auth.py).
          pytest --cov=app --cov-report=xml:coverage.xml --cov-report=term-missing || true
          # IMPORTANT: Remove '|| true' once you have actual tests that are expected to pass.

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Automatically provided by GitHub, required for PR decoration
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}     # Your SonarCloud analysis token from GitHub secrets
        with:
          projectBaseDir: . # Assumes Sonar analysis runs from the root of the checkout
          args: > # Multi-line arguments for the sonar-scanner
            -Dsonar.organization=iamsjeevan
            -Dsonar.projectKey=iamsjeevan_unicampus-backend
            -Dsonar.python.coverage.reportPaths=coverage.xml
            # -Dsonar.sources=app  # Optional: Uncomment if your source code is primarily in the 'app' directory
            # -Dsonar.tests=tests # Optional: Uncomment if your tests are in a 'tests' directory
            # -Dsonar.python.xunit.reportPath=xunit-reports/xunit-result.xml # If you generate xUnit reports
            # -Dsonar.verbose=true # Uncomment for more detailed scanner logs if troubleshooting

  build-and-push-docker-image:
    name: Build and Push Docker Image to GHCR
    runs-on: ubuntu-latest
    needs: build-lint-test-analyze # Run only if the previous job succeeds
    # Only run this step on pushes/merges to main
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    permissions: # Grant necessary permissions to the GITHUB_TOKEN for this job
      contents: read   # To checkout the repo
      packages: write  # To push to GitHub Packages (GHCR)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # Your GitHub username or organization name
          password: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN has permissions due to the 'permissions' block

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Specifies the build context is the current directory
          push: true # Actually push the image
          tags: | # Define tags for the image
            ghcr.io/${{ github.repository_owner }}/unicampus-backend:latest
            ghcr.io/${{ github.repository_owner }}/unicampus-backend:${{ github.sha }}
          # github.repository_owner is usually your GitHub username or org name.
          # Example: ghcr.io/iamsjeevan/unicampus-backend:latest
          cache-from: type=gha # Enable build cache from GitHub Actions cache
          cache-to: type=gha,mode=max # Enable build cache to GitHub Actions cache