# .github/workflows/ci.yml

name: UniCampus Backend CI/CD

on:
  push:
    branches:
      - main
      - 'feat/**'
      - 'fix/**'
      - 'chore/**'
      - 'devops/**'
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  build-lint-test-analyze:
    name: Build, Lint, Test & Analyze with SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest pytest-cov

      - name: Lint with Flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Run Tests with Pytest (and generate coverage)
        run: |
          pytest --cov=app --cov-report=xml:coverage.xml --cov-report=term-missing || true 
          # Remove '|| true' once you have actual tests.

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=iamsjeevan # MAKE SURE THIS IS YOUR CORRECT SONARCLOUD ORG KEY
            -Dsonar.projectKey=iamsjeevan_unicampus-backend # MAKE SURE THIS IS YOUR CORRECT SONARCLOUD PROJECT KEY
            -Dsonar.python.coverage.reportPaths=coverage.xml
            # -Dsonar.sources=app
            # -Dsonar.verbose=true

  build-and-push-docker-image:
    name: Build and Push Docker Image to GHCR
    runs-on: ubuntu-latest
    needs: build-lint-test-analyze
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    permissions: # <------------------------------------ ADD THIS BLOCK
      contents: read   # To checkout the repo
      packages: write  # To push to GitHub Packages (GHCR)
      # id-token: write # Potentially needed for some advanced OIDC scenarios, but not for basic GHCR push with GITHUB_TOKEN

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # This token will now have the packages:write permission

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/unicampus-backend:latest
            ghcr.io/${{ github.repository_owner }}/unicampus-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max