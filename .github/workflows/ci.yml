# .github/workflows/ci.yml

name: UniCampus Backend CI/CD

on:
  push:
    branches:
      - main
      - 'feat/**'
      - 'fix/**'
      - 'chore/**'
      - 'devops/**' # Added for devops branches
  pull_request:
    branches:
      - main

jobs:
  build-lint-test-analyze: # Combined job for efficiency
    name: Build, Lint, Test & Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # SonarCloud needs full history for accurate blame information

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest pytest-cov # Ensure testing tools are installed

      - name: Lint with Flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Run Tests with Pytest (and generate coverage)
        # This step will pass even if no tests are found initially.
        # Create a 'tests' directory and add test files later (e.g., tests/test_example.py)
        run: |
          pytest --cov=app --cov-report=xml:coverage.xml --cov-report=term-missing || true 
          # '|| true' makes the step pass if pytest exits with status 5 (no tests found)
          # Remove '|| true' once you have actual tests.

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master # Use the official SonarCloud action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provided by GitHub
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # Your secret from GitHub repository settings
        with:
          projectBaseDir: . # Or the subdirectory if your code is not at the root
          args: >
            -Dsonar.organization=your-sonarcloud-organization-key
            -Dsonar.projectKey=your-sonarcloud-project-key
            -Dsonar.python.coverage.reportPaths=coverage.xml 
            # Add other Sonar properties if needed, e.g. -Dsonar.sources=app
            # -Dsonar.verbose=true # For debugging SonarCloud issues

  build-and-push-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-lint-test-analyze # Run only if the previous job succeeds
    # Only run this step on pushes to main, or specific release/tag branches
    if: github.ref == 'refs/heads/main' # Adjust as needed, e.g., for a 'develop' branch or tags

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # Your GitHub username or organization name
          password: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN has permissions to push to GHCR in the same repo

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/unicampus-backend:latest
            ghcr.io/${{ github.repository_owner }}/unicampus-backend:${{ github.sha }}
          # github.repository_owner is usually your GitHub username or org name
          # Example tags: ghcr.io/yourusername/unicampus-backend:latest
          #               ghcr.io/yourusername/unicampus-backend:a1b2c3d4 (commit SHA)
          cache-from: type=gha
          cache-to: type=gha,mode=max